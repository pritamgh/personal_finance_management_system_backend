"on":
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

      - name: Build Docker image
        run: |
          docker build -t pfms .

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag Docker image for ECR
        run: |
          docker tag pfms:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pfms:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pfms:latest

      - name: Create .ssh directory (if not present)
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Decode SSH private key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" | base64 --decode > ~/.ssh/projects.pem
          chmod 600 ~/.ssh/projects.pem

      - name: Add SSH key to SSH agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/projects.pem

      - name: Debug - Check if key file exists
        run: ls -alh ~/.ssh/

      - name: Deploy to AWS EC2
        run: |
          # SSH into EC2 instance and run the Docker container
          ssh -i ~/.ssh/projects.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.AWS_EC2_PUBLIC_IP }} << EOF
            sudo usermod -a -G docker ec2-user
            sudo service docker restart
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/application:latest
            docker run -d -p 5000:5000 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/application:latest
          EOF
